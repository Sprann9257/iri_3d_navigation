<?xml version="1.0"?>

<launch>
	<!-- IRI MIRIAMM SIMULATION SETUP -->
	<!-- ============================ -->
	<!-- PETER LEPEJ ====== 10.4.2014 -->
	<!-- ============================ -->

<!-- SIMULATION ENVIRONMENT SETUP -->
<!-- ============================ -->

	<!-- Simple forest and water -->
	<include file="$(find iri_miriamm_sim)/launch/iri_miriamm_world_3.launch"/>

	<!-- Spawn simulated quadrotor uav -->
	<include file="$(find iri_miriamm_sim)/launch/spawn_quadcopter.launch" >
	<arg name="model" value="$(find iri_miriamm_sim)/urdf/quadcopter_iri_conf.gazebo.xacro"/> 
	</include>

<!-- 2D MAPPING AND 3D MAPPING -->
<!-- ========================= -->

	<!-- Start SLAM system -->
	<!--<include file="$(find hector_mapping)/launch/mapping_default.launch">
	<arg name="odom_frame" value="world"/>
	</include>-->

	<!-- Start GeoTIFF mapper -->
	<!--<include file="$(find iri_miriamm_sim)/launch/geotiff_mapper.launch">
	<arg name="trajectory_publish_rate" value="4"/> 
	</include>-->

	<!-- PointCloud 2 PointCloud2 Converter -->
	  <node pkg="point_cloud_converter" name="point_cloud_converter_preself" type="point_cloud_converter">
		<remap from="/points_in" to="/scan_3d" />
		<remap from="/points2_out" to="/scan_3d_pc2" />
	  </node>

	<!-- Octomap Server -->
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
	    <param name="resolution" value="0.05" />

	    <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
	    <param name="frame_id" type="string" value="world" />

	    <!-- maximum range to integrate (speedup!) -->

	    <param name="sensor_model/max_range" value="5.0" />
<!--
	    <param name="sensor_model/hit" value= "0.85" />
	    <param name="sensor_model/miss" value= "0.25" />	
	    <param name="sensor_model/min" value= "0.10" />
	    <param name="sensor_model/max" value= "0.95" />
		<param name="min_z_range" value="0.05" />	
		<param name="max_z_range" value="1.8" />	
		<param name="min_x_size" value="25.0" />
		<param name="min_y_size" value="25.0" />
		<param name="pointcloud_min_z" value="0.10"/>
		<param name="pointcloud_max_z" value="1.80"/>	
-->
		<param name="filter_ground" value="true"/>

	    <param name="latch" value="false" />
	    <!-- data source to integrate (PointCloud2) -->
	     <remap from="cloud_in" to="/scan_3d_pc2" />

	</node>

<!-- POSE ESTIMATION -->
<!-- ==================== -->

	<!-- Pose Reading from TF-->
	<node name="relay_pose_topic" type="relay" pkg="topic_tools" args="/ground_truth_to_tf/pose /odom_fake" />

	<!-- Trajectory Server -->
	<arg name="trajectory_source_frame_name" default="/base_link"/>
	<arg name="trajectory_update_rate" default="4"/>
	<arg name="trajectory_publish_rate" default="0.25"/>

	<node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
		<param name="target_frame_name" type="string" value="/world" />
		<param name="source_frame_name" type="string" value="$(arg trajectory_source_frame_name)" />
		<param name="trajectory_update_rate" type="double" value="$(arg trajectory_update_rate)" />
		<param name="trajectory_publish_rate" type="double" value="$(arg trajectory_publish_rate)" />
	</node>

<!-- PATH PLANNING MOVEIT -->
<!-- ==================== -->


	<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
	<include file="$(find moveit_quadcopter)/launch/planning_context.launch">
	<arg name="load_robot_description" value="true"/>
	</include>

	<!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
	<include file="$(find moveit_quadcopter)/launch/move_group.launch">
	<arg name="allow_trajectory_execution" value="true"/>  
	<arg name="fake_execution" value="true"/>
	<arg name="info" value="true"/>
	</include>
  
<!-- VIZUALIZATION -->
<!-- ============= -->

	<!-- Start rviz visualization with preset config -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find iri_miriamm_sim)/rviz_conf/forest_rviz.rviz">
    		<rosparam command="load" file="$(find moveit_quadcopter)/config/kinematics.yaml"/>
	</node>

</launch>
